name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
# 工作流环境变量
env:
  # 壳工程
  SHELL_REPO: 4332weizi/taro-native-shell
  # 壳工程ref
  SHELL_REPO_REF: 0.63.2_origin
  # 壳工程目录
  SHELL_REPO_PATH: taro-native-shell
  # 应用的application_id
  APP_ID: taro.mortgage.calculator
  # 应用名称
  APP_NAME: Taro Mortgage Caclulator
  # 打包类型
  BUILD_TYPE: release
  # 版本名称
  VERSION_NAME: 1.0
  # 版本号
  VERSION_CODE: 10
  # 密钥库文件
  KEYSTORE_FILE: android/keystore.jks
  # 密钥库口令
  KEYSTORE_PASSWORD: 123456
  # 密钥库别名
  KEYSTORE_KEY_ALIAS: app
  # 密钥库别名口令
  KEYSTORE_KEY_PASSWORD: abcdefg

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x]

    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
  
      - run: npm install -g yarn
      - run: yarn config set registry https://registry.yarnpkg.com

      - uses: ./
        with:
          REPO: ${{ env.SHELL_REPO }}
          REPO_REF: ${{ env.SHELL_REPO_REF }}
          REPO_PATH: taro-native-shell

      # - run: |
      #     npm install
      # - run: |
      #     npm run all
  
  # test: # make sure the action works on a clean machine without building
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./
  #       with:
  #         milliseconds: 1000
